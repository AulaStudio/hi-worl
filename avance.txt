
frontend@INFORCAP-39 MINGW64 ~
$ pwd
/c/Users/frontend

frontend@INFORCAP-39 MINGW64 ~
$ ls
'3D Objects'/
 AppData/
'Configuración local'@
 Contacts/
 Cookies@
'Datos de programa'@
 Desktop/
 Documents/
 Downloads/
'Entorno de red'@
 Favorites/
 Impresoras@
 IntelGraphicsProfiles/
 Links/
'Menú Inicio'@
 MicrosoftEdgeBackups/
'Mis documentos'@
 Music/
 NTUSER.DAT
 ntuser.dat.LOG1
 ntuser.dat.LOG2
 NTUSER.DAT{5d48659b-53fb-11ea-a863-c01736424a9f}.TM.blf
 NTUSER.DAT{5d48659b-53fb-11ea-a863-c01736424a9f}.TMContainer00000000000000000001.regtrans-ms
 NTUSER.DAT{5d48659b-53fb-11ea-a863-c01736424a9f}.TMContainer00000000000000000002.regtrans-ms
 ntuser.ini
 OneDrive/
 Pictures/
 Plantillas@
 Reciente@
'Saved Games'/
 Searches/
 SendTo@
 Videos/

frontend@INFORCAP-39 MINGW64 ~
$ cd Desktop/

frontend@INFORCAP-39 MINGW64 ~/Desktop
$ ls -1
Atom.lnk*
desktop.ini
examen/
Front-end/
'javaScrips Basics.html'
'Microsoft Edge.lnk'*
'Nueva carpeta (5)'/
'Visual Studio Code.lnk'*

frontend@INFORCAP-39 MINGW64 ~/Desktop
$  cd Front-end/

frontend@INFORCAP-39 MINGW64 ~/Desktop/Front-end
$ ls -1
'Algorithm_Book_(02-09-2016).pdf'
'bloque responsivo'/
'bloque responsivo.zip'
ejercicios/
examen.zip
github/
internet.zip
'Nueva carpeta'/
'Nueva carpeta (4).zip'
'Nueva carpeta (5).zip'
'Nueva carpeta (7).zip'

frontend@INFORCAP-39 MINGW64 ~/Desktop/Front-end
$ cd github/

frontend@INFORCAP-39 MINGW64 ~/Desktop/Front-end/github (master)
$ ls
git.css  git.html  index.html  style.css

frontend@INFORCAP-39 MINGW64 ~/Desktop/Front-end/github (master)
$ ls -|1
ls: cannot access '-': No such file or directory
bash: 1: command not found

frontend@INFORCAP-39 MINGW64 ~/Desktop/Front-end/github (master)
$ ls -1
git.css
git.html
index.html
style.css

frontend@INFORCAP-39 MINGW64 ~/Desktop/Front-end/github (master)
$ git add
Nothing specified, nothing added.
Maybe you wanted to say 'git add .'?

frontend@INFORCAP-39 MINGW64 ~/Desktop/Front-end/github (master)
$ ^C

frontend@INFORCAP-39 MINGW64 ~/Desktop/Front-end/github (master)
$ git add
Nothing specified, nothing added.
Maybe you wanted to say 'git add .'?

frontend@INFORCAP-39 MINGW64 ~/Desktop/Front-end/github (master)
$ ls -l
total 2
-rw-r--r-- 1 frontend 197121 198 feb. 28 19:44 git.css
-rw-r--r-- 1 frontend 197121 311 feb. 28 19:41 git.html
-rw-r--r-- 1 frontend 197121   0 feb. 28 19:21 index.html
-rw-r--r-- 1 frontend 197121   0 feb. 28 19:21 style.css

frontend@INFORCAP-39 MINGW64 ~/Desktop/Front-end/github (master)
$ ls -1
git.css
git.html
index.html
style.css

frontend@INFORCAP-39 MINGW64 ~/Desktop/Front-end/github (master)
$ ls -2
ls: unknown option -- 2
Try 'ls --help' for more information.

frontend@INFORCAP-39 MINGW64 ~/Desktop/Front-end/github (master)
$ ls -l
total 2
-rw-r--r-- 1 frontend 197121 198 feb. 28 19:44 git.css
-rw-r--r-- 1 frontend 197121 311 feb. 28 19:41 git.html
-rw-r--r-- 1 frontend 197121   0 feb. 28 19:21 index.html
-rw-r--r-- 1 frontend 197121   0 feb. 28 19:21 style.css

frontend@INFORCAP-39 MINGW64 ~/Desktop/Front-end/github (master)
$ cd /c/Users/frontend/Desktop/examen

frontend@INFORCAP-39 MINGW64 ~/Desktop/examen
$ git
usage: git [--version] [--help] [-C <path>] [-c <name>=<value>]
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
           [-p | --paginate | -P | --no-pager] [--no-replace-objects] [--bare]
           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]
           <command> [<args>]

These are common Git commands used in various situations:

start a working area (see also: git help tutorial)
   clone             Clone a repository into a new directory
   init              Create an empty Git repository or reinitialize an existing one

work on the current change (see also: git help everyday)
   add               Add file contents to the index
   mv                Move or rename a file, a directory, or a symlink
   restore           Restore working tree files
   rm                Remove files from the working tree and from the index
   sparse-checkout   Initialize and modify the sparse-checkout

examine the history and state (see also: git help revisions)
   bisect            Use binary search to find the commit that introduced a bug
   diff              Show changes between commits, commit and working tree, etc
   grep              Print lines matching a pattern
   log               Show commit logs
   show              Show various types of objects
   status            Show the working tree status

grow, mark and tweak your common history
   branch            List, create, or delete branches
   commit            Record changes to the repository
   merge             Join two or more development histories together
   rebase            Reapply commits on top of another base tip
   reset             Reset current HEAD to the specified state
   switch            Switch branches
   tag               Create, list, delete or verify a tag object signed with GPG

collaborate (see also: git help workflows)
   fetch             Download objects and refs from another repository
   pull              Fetch from and integrate with another repository or a local branch
   push              Update remote refs along with associated objects

'git help -a' and 'git help -g' list available subcommands and some
concept guides. See 'git help <command>' or 'git help <concept>'
to read about a specific subcommand or concept.
See 'git help git' for an overview of the system.

frontend@INFORCAP-39 MINGW64 ~/Desktop/examen
$ pwd
/c/Users/frontend/Desktop/examen

frontend@INFORCAP-39 MINGW64 ~/Desktop/examen
$ cd ..

frontend@INFORCAP-39 MINGW64 ~/Desktop
$ ls
 Atom.lnk*     examen/     'javaScrips Basics.html'  'Nueva carpeta (5)'/
 desktop.ini   Front-end/  'Microsoft Edge.lnk'*     'Visual Studio Code.lnk'*

frontend@INFORCAP-39 MINGW64 ~/Desktop
$ cd Front-end/

frontend@INFORCAP-39 MINGW64 ~/Desktop/Front-end
$ ls
'Algorithm_Book_(02-09-2016).pdf'   examen.zip       'Nueva carpeta (4).zip'
'bloque responsivo'/                github/          'Nueva carpeta (5).zip'
'bloque responsivo.zip'             internet.zip     'Nueva carpeta (7).zip'
 ejercicios/                       'Nueva carpeta'/

frontend@INFORCAP-39 MINGW64 ~/Desktop/Front-end
$ cd github/

frontend@INFORCAP-39 MINGW64 ~/Desktop/Front-end/github (master)
$ ls -l
total 2
-rw-r--r-- 1 frontend 197121 198 feb. 28 19:44 git.css
-rw-r--r-- 1 frontend 197121 311 feb. 28 19:41 git.html
-rw-r--r-- 1 frontend 197121   0 feb. 28 19:21 index.html
-rw-r--r-- 1 frontend 197121   0 feb. 28 19:21 style.css

frontend@INFORCAP-39 MINGW64 ~/Desktop/Front-end/github (master)
$ git add
Nothing specified, nothing added.
Maybe you wanted to say 'git add .'?

frontend@INFORCAP-39 MINGW64 ~/Desktop/Front-end/github (master)
$ git add .

frontend@INFORCAP-39 MINGW64 ~/Desktop/Front-end/github (master)
$ ls -l
total 2
-rw-r--r-- 1 frontend 197121 198 feb. 28 19:44 git.css
-rw-r--r-- 1 frontend 197121 311 feb. 28 19:41 git.html
-rw-r--r-- 1 frontend 197121   0 feb. 28 19:21 index.html
-rw-r--r-- 1 frontend 197121   0 feb. 28 19:21 style.css

frontend@INFORCAP-39 MINGW64 ~/Desktop/Front-end/github (master)
$ ls
git.css  git.html  index.html  style.css

frontend@INFORCAP-39 MINGW64 ~/Desktop/Front-end/github (master)
$ git status
On branch master

No commits yet

Changes to be committed:
  (use "git rm --cached <file>..." to unstage)
        new file:   git.css
        new file:   git.html
        new file:   index.html
        new file:   style.css


frontend@INFORCAP-39 MINGW64 ~/Desktop/Front-end/github (master)
$ git commint
git: 'commint' is not a git command. See 'git --help'.

The most similar command is
        commit

frontend@INFORCAP-39 MINGW64 ~/Desktop/Front-end/github (master)
$ git commit "first commit"
error: pathspec 'first commit' did not match any file(s) known to git

frontend@INFORCAP-39 MINGW64 ~/Desktop/Front-end/github (master)
$ git commit -m "first commit"

*** Please tell me who you are.

Run

  git config --global user.email "you@example.com"
  git config --global user.name "Your Name"

to set your account's default identity.
Omit --global to set the identity only in this repository.

fatal: unable to auto-detect email address (got 'frontend@INFORCAP-39.(none)')

frontend@INFORCAP-39 MINGW64 ~/Desktop/Front-end/github (master)
$ ^C

frontend@INFORCAP-39 MINGW64 ~/Desktop/Front-end/github (master)
$ git config
usage: git config [<options>]

Config file location
    --global              use global config file
    --system              use system config file
    --local               use repository config file
    --worktree            use per-worktree config file
    -f, --file <file>     use given config file
    --blob <blob-id>      read config from given blob object

Action
    --get                 get value: name [value-regex]
    --get-all             get all values: key [value-regex]
    --get-regexp          get values for regexp: name-regex [value-regex]
    --get-urlmatch        get value specific for the URL: section[.var] URL
    --replace-all         replace all matching variables: name value [value_regex]
    --add                 add a new variable: name value
    --unset               remove a variable: name [value-regex]
    --unset-all           remove all matches: name [value-regex]
    --rename-section      rename section: old-name new-name
    --remove-section      remove a section: name
    -l, --list            list all
    -e, --edit            open an editor
    --get-color           find the color configured: slot [default]
    --get-colorbool       find the color setting: slot [stdout-is-tty]

Type
    -t, --type <>         value is given this type
    --bool                value is "true" or "false"
    --int                 value is decimal number
    --bool-or-int         value is --bool or --int
    --path                value is a path (file or directory name)
    --expiry-date         value is an expiry date

Other
    -z, --null            terminate values with NUL byte
    --name-only           show variable names only
    --includes            respect include directives on lookup
    --show-origin         show origin of config (file, standard input, blob, command line)
    --default <value>     with --get, use default value when missing entry


frontend@INFORCAP-39 MINGW64 ~/Desktop/Front-end/github (master)
$ git --local
unknown option: --local
usage: git [--version] [--help] [-C <path>] [-c <name>=<value>]
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
           [-p | --paginate | -P | --no-pager] [--no-replace-objects] [--bare]
           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]
           <command> [<args>]

frontend@INFORCAP-39 MINGW64 ~/Desktop/Front-end/github (master)
$ ^C

frontend@INFORCAP-39 MINGW64 ~/Desktop/Front-end/github (master)
$ ls
git.css  git.html  index.html  style.css

frontend@INFORCAP-39 MINGW64 ~/Desktop/Front-end/github (master)
$ git commit -m "first commit"

*** Please tell me who you are.

Run

  git config --global user.email "you@example.com"
  git config --global user.name "Your Name"

to set your account's default identity.
Omit --global to set the identity only in this repository.

fatal: unable to auto-detect email address (got 'frontend@INFORCAP-39.(none)')

frontend@INFORCAP-39 MINGW64 ~/Desktop/Front-end/github (master)
$ git local
git: 'local' is not a git command. See 'git --help'.

frontend@INFORCAP-39 MINGW64 ~/Desktop/Front-end/github (master)
$ git config
usage: git config [<options>]

Config file location
    --global              use global config file
    --system              use system config file
    --local               use repository config file
    --worktree            use per-worktree config file
    -f, --file <file>     use given config file
    --blob <blob-id>      read config from given blob object

Action
    --get                 get value: name [value-regex]
    --get-all             get all values: key [value-regex]
    --get-regexp          get values for regexp: name-regex [value-regex]
    --get-urlmatch        get value specific for the URL: section[.var] URL
    --replace-all         replace all matching variables: name value [value_regex]
    --add                 add a new variable: name value
    --unset               remove a variable: name [value-regex]
    --unset-all           remove all matches: name [value-regex]
    --rename-section      rename section: old-name new-name
    --remove-section      remove a section: name
    -l, --list            list all
    -e, --edit            open an editor
    --get-color           find the color configured: slot [default]
    --get-colorbool       find the color setting: slot [stdout-is-tty]

Type
    -t, --type <>         value is given this type
    --bool                value is "true" or "false"
    --int                 value is decimal number
    --bool-or-int         value is --bool or --int
    --path                value is a path (file or directory name)
    --expiry-date         value is an expiry date

Other
    -z, --null            terminate values with NUL byte
    --name-only           show variable names only
    --includes            respect include directives on lookup
    --show-origin         show origin of config (file, standard input, blob, command line)
    --default <value>     with --get, use default value when missing entry


frontend@INFORCAP-39 MINGW64 ~/Desktop/Front-end/github (master)
$ --local
bash: --local: command not found

frontend@INFORCAP-39 MINGW64 ~/Desktop/Front-end/github (master)
$ git local
git: 'local' is not a git command. See 'git --help'.

frontend@INFORCAP-39 MINGW64 ~/Desktop/Front-end/github (master)
$ git --local
unknown option: --local
usage: git [--version] [--help] [-C <path>] [-c <name>=<value>]
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
           [-p | --paginate | -P | --no-pager] [--no-replace-objects] [--bare]
           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]
           <command> [<args>]

frontend@INFORCAP-39 MINGW64 ~/Desktop/Front-end/github (master)
$ gti --help
bash: gti: command not found

frontend@INFORCAP-39 MINGW64 ~/Desktop/Front-end/github (master)
$ --help
bash: --help: command not found

frontend@INFORCAP-39 MINGW64 ~/Desktop/Front-end/github (master)
$ git -c
-c expects a configuration string
usage: git [--version] [--help] [-C <path>] [-c <name>=<value>]
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
           [-p | --paginate | -P | --no-pager] [--no-replace-objects] [--bare]
           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]
           <command> [<args>]

frontend@INFORCAP-39 MINGW64 ~/Desktop/Front-end/github (master)
$ checkout
bash: checkout: command not found

frontend@INFORCAP-39 MINGW64 ~/Desktop/Front-end/github (master)
$ git checkout
fatal: You are on a branch yet to be born

frontend@INFORCAP-39 MINGW64 ~/Desktop/Front-end/github (master)
$ git commit -m
error: switch `m' requires a value

frontend@INFORCAP-39 MINGW64 ~/Desktop/Front-end/github (master)
$ 2
bash: 2: command not found

frontend@INFORCAP-39 MINGW64 ~/Desktop/Front-end/github (master)
$ git commit -m "first commit"

*** Please tell me who you are.

Run

  git config --global user.email "you@example.com"
  git config --global user.name "Your Name"

to set your account's default identity.
Omit --global to set the identity only in this repository.

fatal: unable to auto-detect email address (got 'frontend@INFORCAP-39.(none)')

frontend@INFORCAP-39 MINGW64 ~/Desktop/Front-end/github (master)
$ git config --global user.email "daniel.abarzaalvarez96@gmail.com"

frontend@INFORCAP-39 MINGW64 ~/Desktop/Front-end/github (master)
$ ls
git.css  git.html  index.html  style.css

frontend@INFORCAP-39 MINGW64 ~/Desktop/Front-end/github (master)
$ git commit -m "first commit"
[master (root-commit) 4a08aef] first commit
 4 files changed, 22 insertions(+)
 create mode 100644 git.css
 create mode 100644 git.html
 create mode 100644 index.html
 create mode 100644 style.css

frontend@INFORCAP-39 MINGW64 ~/Desktop/Front-end/github (master)
$ ^C

frontend@INFORCAP-39 MINGW64 ~/Desktop/Front-end/github (master)
$ git status
On branch master
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   git.html

no changes added to commit (use "git add" and/or "git commit -a")

frontend@INFORCAP-39 MINGW64 ~/Desktop/Front-end/github (master)
$ status
bash: status: command not found

frontend@INFORCAP-39 MINGW64 ~/Desktop/Front-end/github (master)
$ git status
On branch master
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   git.css
        modified:   git.html

no changes added to commit (use "git add" and/or "git commit -a")

frontend@INFORCAP-39 MINGW64 ~/Desktop/Front-end/github (master)
$ ls
git.css  git.html  index.html  style.css

frontend@INFORCAP-39 MINGW64 ~/Desktop/Front-end/github (master)
$ git touch avance.txt
git: 'touch' is not a git command. See 'git --help'.

frontend@INFORCAP-39 MINGW64 ~/Desktop/Front-end/github (master)
$ touch avance.txt

frontend@INFORCAP-39 MINGW64 ~/Desktop/Front-end/github (master)
$ ls
avance.txt  git.css  git.html  index.html  style.css

frontend@INFORCAP-39 MINGW64 ~/Desktop/Front-end/github (master)
$
